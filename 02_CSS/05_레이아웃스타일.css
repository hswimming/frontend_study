/* * {
    color: green;
} */

/* 박스 모델 */
/* width. height */
.size-test {
    border: 10px solid tomato;
    height: 200px;
}
/* 중복되는 요소 클래스로 생성 */

#fixed-size {
    /* 콘텐츠의 너비와 높이를 지정한다. */
    /* border: 2px solid red; */
    border: 5px dotted darkgreen;
    width: 200px;
    height: 200px;
    /* padding: 10px;
    box-sizing: border-box; */
}

#variable-size {
    /* border: 2px solid tomato; */
    width: 50%;
    /* height: 200%; */
}

/* display */
/* 공통되는 부분 묶기 */
.display {
    border: 1px solid black;
    width: 150px;
    height: 50px;
    /* margin-bottom: 10px; */
    margin: 10px;
    /* display: none; */
}

.display-inline {
    display: inline;
}

.display-block {
    display: block;
}

/* .display-inline {
    border: 1px solid black;
    width: 150px;
    height: 50px;
    margin: 10px;
    margin-bottom: 10px;
    display: inline;
    display: none;
    none으로 줄 경우 보이지도 않고 공간도 차지하지 않는다.
} */

/* .display-block {
    border: 1px solid black;
    width: 150px;
    height: 50px;
    margin: 10px;
    padding: 10px;
    margin-bottom: 10px;
    display: block;
} */

.display-inline-block {
    display: inline-block;
}

/* padding, margin */
.space {
    width: 100px;
    height: 100px;
    background-color: beige;
}

#padding1 {
    padding: 10px;
}
/* 상, 하, 좌, 우 로 여백이 10px씩 들어가기 때문에 넓이가 100 -> 120 x 120 으로 변경된다. */

#padding2 {
    /* padding-top: 50px; */
    /* padding-right: 100px; */
    /* 위/아래 50px, 좌/우 30px */
    /* padding: 50px 30px; */
    /* 위 30px 우 50px 아래 30px 좌 50pc */
    padding: 30px 50px 30px 50px;
}

#margin1 {
    margin: 50px;
}
/* 요소와 요소 사이 외부에 여백을 준다 */

#margin2 {
    /* margin-top: 30px; */
    /* margin-left: 20px; */
    /* 위/아래 50px, 좌/우 30px */
    /* margin: 50px 30px */
    /* 상 30px 우 50px 하 30px 좌 50pc */
    margin: 30px 50px 30px 50px;
}
/* 상, 하로 margin이 들어가면 값이 큰 쪽으로 중첩된다. (좌, 우는 X )*/

/* 테두리 스타일 */
.border {
    width: 100px;
    height: 100px;
    margin-bottom: 10px;
    border: 10px solid;
}

#border1 {
    border-style: none;
    /* 테두리가 없어지면서 차지하고 있던 공간도 없어진다. */
}

#border2 {
    border-style: hidden;
    /* 테두리가 없어지면서 차지하고 있던 공간도 없어진다. */
    /* none과 큰 차이가 없지만 hidden이 우선순위가 더 높다 */
    color: darkkhaki;
    /* shadow가 글자색을 따라간다. */
    /* box-shadow: 15px -15px 30px 12px gainsboro; */
    box-shadow: 15px -15px 30px 12px gainsboro inset;
    /* 그림자가 안쪽으로 들어간다. */
}

#border3 {
    border-style: dashed;
}

#border4 {
    border-style: dotted;
    /* border-color: pink; */
    /* border-color: pink skyblue; */
    /* border-color: pink yellowgreen skyblue darkgoldenrod; */
    border-top-color: pink;
    border-left-color: cornflowerblue;
    border-bottom-color: beige;
    border-right-color: darkgray;
}

#border5 {
    border-style: double;
    /* border-width: 40px; */
    border-color: tomato;
    border-top-left-radius: 20px;
    border-bottom-right-radius: 20px;
    border-bottom-left-radius: 10px 20px;
}

#border6 {
    border-style: groove;
}

#border7 {
    border-style: ridge;
}

#border8 {
    border-style: inset;
}

#border9 {
    border-style: outset;
}

#border10 {
    border-style: solid;
    /* border-width: 20px; */
    /* border-width: 20px 30px; */
    /* border-width: 20px 30px 10px 40px; */
    border-top-width: 20px;
    border-left-width: thick;
    border-right-width: medium;
    border-bottom-width: thin;
}

/* 포지셔닝 */
/* float */
.float {
    border: 1px solid;
    width: 100px;
    height: 100px;
    margin-bottom: 10px;
    margin-right: 5px;
    float: left;
    /* 띄워서 배치하기 때문에 display 속성이 먹지 않는다 (개발자 도구에서 block으로 되어있음) */
    /* display: inline; */
    /* float: right; */
}

/* position */
#outer {
    position: relative;
    top: 10px;
    left: 20px;
    /* 별도의 offset값을 지정하지 않으면 static */
    width: 300px;
    height: 300px;
    background-color: yellowgreen;
}

#first {
    position: absolute;
    top: 50px;
    left: 50px;
    /* 부모 요소로 static이 아닌 요소가 있어야 가능, 없으면 body 기준*/
    /* 현재 부모 outer, position 갖고있음*/
    width: 200px;
    height: 200px;
    background-color: beige;
}

#second {
    position: absolute;
    top: 100px;
    left: 100px;
    width: 100px;
    height: 100px;
    /* 현재 부모 outer, position 갖고있음*/
    background-color: cornflowerblue;
}

#fixed {
    /* position: fixed; */
    /* 고정돼서 따라다님 */
    /* position: sticky; */
    /* 스크롤 아래로 쭉 내리면 고정돼서 따라다님 */
    top: 100px;
    /* right: 100px; */
    left: 500px;
    width: 100px;
    height: 100px;
    background-color: skyblue;
}

/* visibility */
.visibility {
    border: 1px solid;
    width: 100px;
    height: 100px;
    margin-bottom: 5px;
}

#visibility1 {
    background-color: pink;
}

#visibility2 {
    /* visibility: hidden; 보이지는 않지만 공간은 그대로 차지한다. */
    /* display: none; 보이지도 않고 공간을 차지하지도 않는다. */
    background-color: beige;
}

#visibility3 {
    background-color: skyblue;
}

/* z-index */
#z-outer {
    position: relative;
    height: 250px;
}

.z-index {
    width: 150px;
    height: 100px;
    border: 1px solid;
    position: absolute; /* 부모 요소가 static이 아닌 요소의 모서리를 기준으로 배치 */
}

#z-index1 {
    top: 100px;
    left: 100px;
    background-color: darkorange;
    z-index: 5;
}

#z-index2 {
    top: 50px;
    left: 50px;
    background-color: khaki;
    z-index: 6; /* 위의 z-index 값 보다 크기 때문에 맨 위에 온다. */
}

#z-index3 {
    background-color: darkolivegreen;
    z-index: 9999; /* 어떠한 경우에도 맨 위에 오게 하고 싶은 경우 */
}

/* 다단 스타일 */
.column-wrap {
    border: 1px solid;
    height: 200px;
    overflow: scroll;
}

#column1 {
    border: 1px solid;
    height: 200px;
    overflow: scroll; /* div 높이에서 넘어가는 부분은 scroll로 볼 수 있다. */
    column-width: 300px;
    /* 단의 너비가 고정이 되기 때문에 브라우저의 크기가 변하면 늘어나거나 줄어든다. */
    column-gap: 50px;
    /* column-rule-color: black; */
    /* column-rule-style: dashed; */
    /* column-rule-width: 1.5px; */
    column-rule: 1.5px dashed cornflowerblue; /* 한번에 조건을 주는 방법 */
}

#column2 {
    column-count: 6;
}

#column2>h4 {
    /* column-span: 1; 기본(단을 합치지 않는다.) */
    column-span: all;
}

/* 표 스타일 */
table {
    width: 300px;
    height: 400px;
    border: 1px solid;
    caption-side: bottom; /* 어디에 위치하든 무조건 아래로 이동 */
    /* border-collapse: separate; 기본 */
    /* border-collapse: collapse; 합치기 */
    /* border-spacing: 20px; */
    border-spacing: 20px 50px; /* collapse 상태에서는 적용되지 않는다. */
    /* empty-cells: swow; 기본 */
    empty-cells: hide; /* collapse 상태에서는 적용되지 않는다. */
    table-layout: fixed;
    /* word-break: break-all; */
    /* 셀 하나가 커지면 다른 셀도 커지기 때문에 테이블에 style을 줘야 한다. */
}

td {
    width: 80px;
    height: 100px;
    border: 1px solid;
    text-align: center; /* 수평정렬 */
    vertical-align: bottom; /* 수직정렬 */
    overflow: hidden;
    text-overflow: ellipsis; /* 한글 적용 안됨 */
}
